// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VoteType {
  UP
  DOWN
}

model User {
  id String @id @default(uuid())
  clerkId String @unique
  email String
  image String
  username String

  posts Post[]
  comments Comment[]
  votes CommentVote[]
}

model Post {
  id String @id @default(uuid())
  userId String
  title String
  content String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  thumbnail Thumbnail?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  comments Comment[]

  @@index([userId])
  @@index([title])
}

model Thumbnail {
  id String @id @default(uuid())
  postId String? @unique
  key String
  url String

  post Post? @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@index([postId])
}

model Comment {
  id String @id @default(uuid())
  userId String
  postId String
  commentId String?
  message String
  upvotes Int @default(0)
  downvotes Int @default(0)
  mainScore Float @default(0)
  hotScore Float @default(0)
  topScore Int @default(0)
  controversialScore Float @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  votes CommentVote[]

  @@index([userId])
  @@index([postId])
  @@index([commentId])
}

model CommentVote {
  userId String
  commentId String
  type VoteType

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)

  @@id([userId, commentId]) // Many to Many

  @@index([userId])
  @@index([commentId])
}

